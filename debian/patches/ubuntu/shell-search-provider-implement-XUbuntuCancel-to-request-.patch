From: =?utf-8?b?Ik1hcmNvIFRyZXZpc2FuIChUcmV2acOxbyki?= <mail@3v1n0.net>
Date: Tue, 28 Aug 2018 01:44:49 +0200
Subject: shell-search-provider: implement XUbuntuCancel to request search
 cancellation

Stop search and Metadata fetching on XUbuntuCancel dbus method call.
Only allow this if the caller is the same who triggered the actual event.

To implement this redefine `cancel_current_search` with `ignore_partial_results`
parameter so that when this is TRUE we won't return any value to the caller.
This is the case on disposal and when the XUbuntuCancel has been requested,
to avoid some unneeded traffic.

Keep track of all the pending metadata requests in `metas_requests` and
use it to cancel the requests if requested.

Bug-GNOME: https://gitlab.gnome.org/GNOME/gnome-shell/issues/183
Bug-Ubuntu: https://bugs.launchpad.net/ubuntu/bionic/+source/nautilus/+bug/1756826
Forwarded: not-needed
---
 data/shell-search-provider-dbus-interfaces.xml |  1 +
 src/nautilus-shell-search-provider.c           | 58 +++++++++++++++++++++++---
 2 files changed, 54 insertions(+), 5 deletions(-)

diff --git a/data/shell-search-provider-dbus-interfaces.xml b/data/shell-search-provider-dbus-interfaces.xml
index f6840e2..4529c1e 100644
--- a/data/shell-search-provider-dbus-interfaces.xml
+++ b/data/shell-search-provider-dbus-interfaces.xml
@@ -40,5 +40,6 @@
       <arg type='as' name='Terms' direction='in' />
       <arg type='u' name='Timestamp' direction='in' />
     </method>
+    <method name = 'XUbuntuCancel' />
   </interface>
 </node>
diff --git a/src/nautilus-shell-search-provider.c b/src/nautilus-shell-search-provider.c
index 657736d..206bd5d 100644
--- a/src/nautilus-shell-search-provider.c
+++ b/src/nautilus-shell-search-provider.c
@@ -593,13 +593,35 @@ result_metas_return_empty (ResultMetasData *data)
 }
 
 static void
-cancel_result_meta_requests (NautilusShellSearchProvider *self)
+cancel_result_meta_requests (NautilusShellSearchProvider *self,
+                             GDBusMethodInvocation       *invocation)
 {
     g_debug ("*** Cancel Results Meta requests");
 
-    g_list_free_full (self->metas_requests,
-                      (GDestroyNotify) result_metas_return_empty);
-    self->metas_requests = NULL;
+    if (invocation == NULL)
+    {
+        g_list_free_full (self->metas_requests,
+                          (GDestroyNotify) result_metas_return_empty);
+        self->metas_requests = NULL;
+    }
+    else
+    {
+        GList *l, *next = NULL;
+
+        for (l = self->metas_requests; l != NULL; l = next)
+        {
+            ResultMetasData *data = l->data;
+
+            next = l->next;
+
+            if (g_strcmp0 (g_dbus_method_invocation_get_sender (data->invocation),
+                           g_dbus_method_invocation_get_sender (invocation)) == 0)
+            {
+                result_metas_return_empty (data);
+                self->metas_requests = g_list_delete_link (self->metas_requests, l);
+            }
+        }
+    }
 }
 
 static void
@@ -812,6 +834,30 @@ handle_launch_search (NautilusShellSearchProvider2  *skeleton,
     return TRUE;
 }
 
+static gboolean
+handle_xubuntu_cancel (NautilusShellSearchProvider2 *skeleton,
+                       GDBusMethodInvocation        *invocation,
+                       gpointer                      user_data)
+{
+    NautilusShellSearchProvider *self = user_data;
+    PendingSearch *search = self->current_search;
+
+    g_debug ("*** XUbuntuCancel called");
+
+    if (search != NULL &&
+        g_strcmp0 (g_dbus_method_invocation_get_sender (search->invocation),
+                   g_dbus_method_invocation_get_sender (invocation)) == 0)
+    {
+        cancel_current_search_ignoring_partial_results (self);
+    }
+
+    cancel_result_meta_requests (self, invocation);
+
+    nautilus_shell_search_provider2_complete_xubuntu_cancel (skeleton, invocation);
+
+    return TRUE;
+}
+
 static void
 search_provider_dispose (GObject *obj)
 {
@@ -820,7 +866,7 @@ search_provider_dispose (GObject *obj)
     g_clear_object (&self->skeleton);
     g_hash_table_destroy (self->metas_cache);
     cancel_current_search_ignoring_partial_results (self);
-    cancel_result_meta_requests (self);
+    cancel_result_meta_requests (self, NULL);
 
     G_OBJECT_CLASS (nautilus_shell_search_provider_parent_class)->dispose (obj);
 }
@@ -843,6 +889,8 @@ nautilus_shell_search_provider_init (NautilusShellSearchProvider *self)
                       G_CALLBACK (handle_activate_result), self);
     g_signal_connect (self->skeleton, "handle-launch-search",
                       G_CALLBACK (handle_launch_search), self);
+    g_signal_connect (self->skeleton, "handle-xubuntu-cancel",
+                      G_CALLBACK (handle_xubuntu_cancel), self);
 }
 
 static void
